# https://github.com/cheat/cheatsheets
- name: openssl
  keybinds:
  - name: "To create a 2048-bit private key:"
    key: "openssl genrsa -out server.key 2048"
  - name: "To create the Certificate Signing Request (CSR):"
    key: "openssl req -new -key server.key -out server.csr"
  - name: "To sign a certificate using a private key and CSR:"
    key: "openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt"
  - name: "(The above commands may be run in sequence to generate a self-signed SSL certificate.)"
  - name: "To show certificate information for a certificate signing request"
    key: "openssl req -text -noout -in server.csr"
  - name: "To show certificate information for generated certificate"
    key: "openssl x509 -text -noout -in server.crt "
  - name: "To get the sha256 fingerprint of a certificate"
    key: "openssl x509 -in server.crt -noout -sha256 -fingerprint"
  - name: "To generate Diffie-Hellman parameters:"
    key: "openssl dhparam -outform PEM -out dhparams.pem 2048"
  - name: "To test an https server:"
    key: "openssl s_client -connect 10.240.2.130:433"
  - name: "To encrypt High-quality options for openssl for symmetric (secret key) encryption"
    key: "openssl enc -e -aes-256-cbc -salt -pbkdf2 -iter 1000000 -md sha512 -base64 -in somefile -out somefile.enc"
  - name: "To decrypt High-quality options for openssl for symmetric (secret key) encryption"
    key: "openssl enc -d -aes-256-cbc -salt -pbkdf2 -iter 1000000 -md sha512 -base64 -in somefile.enc -out somefile"