# ZSH
# https://github.com/cheat/cheatsheets
- name: zsh (basic)
  keybinds:
    - name: "A plain old glob"
      key: "print -l *.txt"
    - name: "Show text files that end in a number from 1 to 10"
      key: "print -l **/*<1-10>.txt"
    - name: "Show text files that start with the letter a"
      key: "print -l **/[a]*.txt"
    - name: "Show text files that start with either ab or bc"
      key: "print -l **/(ab|bc)*.txt"
    - name: "Show text files that don't start with a lower or uppercase c"
      key: "print -l **/[^cC]*.txt"
    - name: "Show only directories"
      key: "print -l **/*(/)"
    - name: "Show only regular files"
      key: "print -l **/*(.)"
    - name: "Show empty files"
      key: "print -l **/*(L0)"
    - name: "Show files greater than 3 KB"
      key: "print -l **/*(Lk+3)"
    - name: "Show files modified in the last hour"
      key: "print -l **/*(mh-1)"
    - name: "Sort files from most to least recently modified and show the last 3"
      key: "print -l **/*(om[1,3])"
    - name: "show files, smaller than 2MB, modified in last hour, only first 3 files"
      key: "print -l **/*(.Lm-2mh-1om[1,3])"
    - name: "Show every directory that contain directory `.git`"
      key: "print -l **/*(e:'[[ -d $REPLY/.git ]]':)"
    - name: "Return the file name (t stands for tail)"
      key: "print -l *.txt(:t)"
    - name: "Return the file name without the extension (r stands for remove_extension)"
      key: "print -l *.txt(:t:r)"
    - name: "Return the extension"
      key: "print -l *.txt(:e)"
    - name: "Return the parent folder of the file (h stands for head)"
      key: "print -l *.txt(:h)"
    - name: "Return the parent folder of the parent"
      key: "print -l *.txt(:h:h)"
    - name: "Return the parent folder of the first file"
      key: "print -l *.txt([1]:h)"
    - name: "Split the file name at each underscore"
      key: "echo ${(s._.)file}"
    - name: "Join expansion flag, opposite of the split flag."
      key: "array=(a b c d)"
    - name: "Short if"
      key: "if [[ ... ]] command"
    - name: "Short for"
      key: "for i in word ... ; command"
    - name: "Short while"
      key: "while [[ ... ]] { command ... }"
    - name: "Short until"
      key: "until [[ ... ]] { command ... }"
    - name: "Use output of command, when using pipe is not possible Similar to <( ), but creates temporary file (instead of FD or FIFO), when program needs to seek in output."
      key: "=( command )"
- name: zsh (Parameter expansion)
  keybinds:
    - name: "store a glob in a variable"
      key: "files=(*.txt)"
    - name: "store a glob in a variable"
      key: "print -l $files"
    - name: "this is the syntax we saw before"
      key: "print -l $files(:h)"
    - name: "don't mix the two, or you'll get an error"
      key: "print -l ${files(:h)}"
    - name: "the :u modifier makes the text uppercase"
      key: "print -l ${files:u}"
- name: zsh (:s modifier)
  keybinds:
    - name: "path/aaaBCd"
      key: "echo ${variable:s/bc/BC/}"
    - name: "path/aaaBCd"
      key: "echo ${variable:s_bc_BC_}"
    - name: "path.aaabcd (escaping the slash \/)"
      key: "echo ${variable:s/\//./}"
    - name: "path.aaabcd (slightly more readable)"
      key: "echo ${variable:s_/_._}"
    - name: "path/aaabcd (only first A is replaced)"
      key: "echo ${variable:s/a/A/}"
    - name: "path/AAAbcd (all A is replaced)"
      key: "echo ${variable:gs/a/A/}"